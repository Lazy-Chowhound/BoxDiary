package example.diary.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import example.diary.db.entity.DiaryEntity;
import example.diary.db.entity.ItemEntity;
import example.diary.db.entity.MemoEntity;
import example.diary.db.entity.TagEntity;

import example.diary.db.dao.DiaryEntityDao;
import example.diary.db.dao.ItemEntityDao;
import example.diary.db.dao.MemoEntityDao;
import example.diary.db.dao.TagEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig diaryEntityDaoConfig;
    private final DaoConfig itemEntityDaoConfig;
    private final DaoConfig memoEntityDaoConfig;
    private final DaoConfig tagEntityDaoConfig;

    private final DiaryEntityDao diaryEntityDao;
    private final ItemEntityDao itemEntityDao;
    private final MemoEntityDao memoEntityDao;
    private final TagEntityDao tagEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        diaryEntityDaoConfig = daoConfigMap.get(DiaryEntityDao.class).clone();
        diaryEntityDaoConfig.initIdentityScope(type);

        itemEntityDaoConfig = daoConfigMap.get(ItemEntityDao.class).clone();
        itemEntityDaoConfig.initIdentityScope(type);

        memoEntityDaoConfig = daoConfigMap.get(MemoEntityDao.class).clone();
        memoEntityDaoConfig.initIdentityScope(type);

        tagEntityDaoConfig = daoConfigMap.get(TagEntityDao.class).clone();
        tagEntityDaoConfig.initIdentityScope(type);

        diaryEntityDao = new DiaryEntityDao(diaryEntityDaoConfig, this);
        itemEntityDao = new ItemEntityDao(itemEntityDaoConfig, this);
        memoEntityDao = new MemoEntityDao(memoEntityDaoConfig, this);
        tagEntityDao = new TagEntityDao(tagEntityDaoConfig, this);

        registerDao(DiaryEntity.class, diaryEntityDao);
        registerDao(ItemEntity.class, itemEntityDao);
        registerDao(MemoEntity.class, memoEntityDao);
        registerDao(TagEntity.class, tagEntityDao);
    }
    
    public void clear() {
        diaryEntityDaoConfig.clearIdentityScope();
        itemEntityDaoConfig.clearIdentityScope();
        memoEntityDaoConfig.clearIdentityScope();
        tagEntityDaoConfig.clearIdentityScope();
    }

    public DiaryEntityDao getDiaryEntityDao() {
        return diaryEntityDao;
    }

    public ItemEntityDao getItemEntityDao() {
        return itemEntityDao;
    }

    public MemoEntityDao getMemoEntityDao() {
        return memoEntityDao;
    }

    public TagEntityDao getTagEntityDao() {
        return tagEntityDao;
    }

}
